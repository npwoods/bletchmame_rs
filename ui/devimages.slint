import { Button, VerticalBox, HorizontalBox, ComboBox, ListView, LineEdit } from "std-widgets.slint";

export struct DeviceAndImageEntry {
    indent: int,
    display-tag: string,
    options: [string],
    current-option-index: int,
    filename: string}

export component DevicesAndImagesDialog inherits Window {
    title: "Devices And Images";
    icon: @image-url("bletchmame.png");
    callback ok-clicked();
    width: 500px;
    height: 500px;
    in property <length> splitter: 160px;
    in property <[DeviceAndImageEntry]> entries;
    in property <string> none-string;
    callback entry-option-changed(int, int);
    callback entry-button-clicked(int, Point);
    callback menu-entry-activated(MenuEntry);
    public function show-context-menu(entries: [MenuEntry], point: Point) {
        context-menu.show(entries, point);
    }
    VerticalBox {
        ListView {
            height: parent.height - 50px;
            for data[index] in root.entries: Rectangle {
                height: 30px;
                width: parent.width;
                Text {
                    x: data.indent * 20px;
                    text: data.display_tag;
                }

                ComboBox {
                    x: root.splitter;
                    width: root.width - root.splitter - 10px;
                    visible: data.current-option-index >= 0;
                    model: data.options;
                    current-index: data.current-option-index;
                    selected(value) => {
                        root.entry-option-changed(index, self.current-index);
                    }
                    enabled: false;
                }

                LineEdit {
                    x: root.splitter;
                    width: root.width - root.splitter - 50px;
                    visible: data.current-option-index < 0;
                    placeholder-text: root.none-string;
                    text: data.filename;
                    read-only: true;
                }

                Button {
                    x: root.width - 50px;
                    width: 30px;
                    visible: data.current-option-index < 0;
                    text: "...";
                    clicked => {
                        root.entry-button-clicked(index, { x: self.absolute-position.x, y: self.absolute-position.y + self.height });
                    }
                }
            }
        }

        Button {
            max-height: 30px;
            text: "Ok";
            clicked => {
                root.ok-clicked();
            }
        }
    }

    context-menu := ContextMenu {
        activated(entry) => {
            menu-entry-activated(entry)
        }
    }
}
