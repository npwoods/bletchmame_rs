import { Button, VerticalBox, HorizontalBox, ComboBox, ListView, LineEdit, StandardButton } from "std-widgets.slint";
import { DevicesAndImagesList, DeviceAndImageEntry, DevicesAndImagesState, DevicesAndImagesContextMenuInfo } from "devimageslist.slint";


export component DevicesAndImagesDialog inherits Window {
    title: "Devices And Images";
    icon: @image-url("bletchmame.png");
    callback ok-clicked();
    callback apply-changes-clicked();
    preferred-width: 600px;
    preferred-height: 500px;
    in property <DevicesAndImagesState> state;
    in property <bool> config-dirty;
    callback entry-option-changed(int, string);
    callback entry-button-clicked(int, Point);
    callback menu-entry-activated(MenuEntry);
    public function show-context-menu(info: DevicesAndImagesContextMenuInfo, point: Point) {
        dev-images-list.show-context-menu(info, point);
    }

    // controls
    VerticalBox {
        dev-images-list := DevicesAndImagesList {
            state: root.state;
            images-button-enabled: !config-dirty;
            entry-option-changed(index, option-name) => {
                root.entry-option-changed(index, option-name);
            }
            entry-button-clicked(index, point) => {
                root.entry-button-clicked(index, point);
            }
            menu-entry-activated(entry) => {
                root.menu-entry-activated(entry);
            }
        }

        HorizontalBox {
            visible: root.config-dirty;
            Text {
                text: "Device configuration changes require reset to take effect";
                color: red;
            }
        }

        HorizontalBox {
            alignment: end;
            Button {
                max-height: 30px;
                text: "Apply Changes and Reset";
                clicked => {
                    root.apply-changes-clicked();
                }
                enabled: root.config-dirty;
            }

            StandardButton {
                max-height: 30px;
                kind: ok;
                clicked => {
                    root.ok-clicked();
                }
            }
        }
    }
}
