import { GridBox, VerticalBox, HorizontalBox, Button, StandardButton, ScrollView } from "std-widgets.slint";
import { SimpleMenuEntry } from "common.slint";

export struct InputDialogEntry {
    name: string,
    text: string,
    primary-action: string}

export component InputDialog inherits Window {
    title: dialog-title;
    icon: @image-url("bletchmame.png");
    preferred-width: 600px;
    preferred-height: 500px;

    // properties
    in property <string> dialog-title;
    in property <[InputDialogEntry]> entries;
    in property <string> restore-defaults-action;

    // callbacks
    callback ok-clicked();
    callback context-button-clicked(int, Point);
    callback menu-item-action(string);

    // context menu
    in-out property <[SimpleMenuEntry]> context-menu-entries-1;
    in-out property <[SimpleMenuEntry]> context-menu-entries-2;
    public function show-context-menu(entries-1: [SimpleMenuEntry], entries-2: [SimpleMenuEntry], point: Point) {
        self.context-menu-entries-1 = entries-1;
        self.context-menu-entries-2 = entries-2;
        context-menu.show(point);
    }

    // context menu control
    context-menu := ContextMenuArea {
        Menu {
            for entry in context-menu-entries-1: MenuItem {
                title: entry.title;
                enabled: entry.action != "";
                activated => {
                    root.menu-item-action(entry.action);
                }
            }
            if context-menu-entries-1.length > 0: MenuSeparator { }
            for entry in context-menu-entries-2: MenuItem {
                title: entry.title;
                enabled: entry.action != "";
                activated => {
                    root.menu-item-action(entry.action);
                }
            }
        }
    }

    // control hierarchy
    VerticalBox {
        ScrollView {
            VerticalBox {
                padding: 3px;
                vertical-stretch: 0;
                for entry[index] in root.entries: HorizontalLayout {
                    vertical-stretch: 0;
                    height: 30px;
                    Button {
                        width: 300px;
                        text: entry.name;
                        enabled: entry.primary-action != "";
                        clicked => {
                            root.menu-item-action(entry.primary-action);
                        }
                    }

                    Button {
                        width: 40px;
                        text: "â–¼";
                        enabled: true;
                        clicked => {
                            root.context-button-clicked(index, { x: self.absolute-position.x, y: self.absolute-position.y + self.height });
                        }
                    }

                    VerticalLayout {
                        alignment: center;
                        Text {
                            width: 100%;
                            text: entry.text;
                        }
                    }
                }
            }
        }

        HorizontalBox {
            alignment: end;
            Button {
                text: @tr("Restore Defaults");
                horizontal-stretch: 0;
                enabled: !root.restore-defaults-action.is-empty;
                clicked => {
                    menu-item-action(root.restore-defaults-action);
                }
            }

            StandardButton {
                kind: ok;
                horizontal-stretch: 0;
                clicked => {
                    root.ok-clicked();
                }
            }
        }
    }
}
